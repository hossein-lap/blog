baseURL = "https://hossein-lap.github.io"
theme = "hugo-ficurinia"
title = "Hossein Esmail"
languageCode = "en"
defaultContentLanguage = "en"

# this will be included in the footer after the current year the site is last
# built, followed by the (c) symbol
# you can use markdown inside this field
# copyright = "Some copyright notice - [my license](https://example.com/license)"
copyright = "Hos Es"

paginate = 5  # number of articles per page in the index
summaryLength = 70  # number of words for article summaries


[params]
    author = "Hossein Esmail"
    description = "Personal blog"  # this will be added as metadata

    posts = "blog"  # content directory where to find home page posts; default searches in "posts" and "post"
    showPostsLink = false  # show or hide the link to the simple post list
    extraContentDirs = ["docs", "notes", "about"]  # other content directories to render similarly to the home page
    showcaseDir = "showcase"  # create a content directory that shows a special showcase section in the home page

    # shows a specified single page as a home page, instead of the traditional articles list
    # requires setting `homeSinglePage`
    # goes well with extraContentDirs
    showSinglePageAsHome = true
    homeSinglePage = "/welcome"

    # It's best to put these icons in the "static" folder of your site
    logo = "/images/ed/foo.png"
    svgicon = "/images/ed/foo.png"
    favicon = "/images/ed/foo.png"  # 32x32
    faviconIco = "/images/ed/foo.png"  # 32x32
    appletouch = "/images/ed/foo.png"  # 180x180
    icon512 = "/images/ed/foo.png"  # 512x512 png image

    # logo = "/images/me/me-circle.png"
    # svgicon = "/images/me/me-square.png"
    # favicon = "/images/me/H.png"  # 32x32
    # faviconIco = "/images/me/H.png"  # 32x32
    # appletouch = "/images/me/H.png"  # 180x180
    # icon512 = "/images/me/H.png"  # 512x512 png image

    logoRightOfTitle = true  # positions the logo to the right of the title; default: false

    showTags = true  # show the Tags menu item; default true
    showRss = true  # show the link for the RSS feed; default true

    imageInArticlePreview = true  # show images in article preview; default false
    fitImageInArticlePreview = true  # make article preview images fit the article preview instead of getting cropped
    articleSummary = true  # show a summary in article preview; default true

    fontFamily = "Liberation Sans"  # changes the font, default "JetBrains Mono"
    titleFontFamily = "Liberation Serif"  # font used for titles and headings
    monospaceFontFamily = "Ubuntu Mono"  # changes the monospace font for code, default "JetBrains Mono"

    # multipliers applied to font sizes, useful for custom fonts that may be too big or too small
    titleFontSizeMultiplier = 2.0
    mainFontSizeMultiplier = 1.5
    monoFontSizeMultiplier = 1.7

    contentWidth = "1200px"  # maximum width of the site content, css syntax

    paperCards = true  # enable paper card style; default false
    buttonTags = true  # enable button tag style; default false
    tagsInArticlePreview = true  # enable tags list in the article preview card
    gridView = false  # show post list as a grid. goes well with paperCards
    bigArticleTitle = true  # makes the title in the single article view bigger
    navtype = "standard"  # changes the style of the pagination, available styles are: "standard", "circles"
    enableShadow = true  # shows a shadow around some elements
    menuStyle = "standard"  # changes the style of the main site navigation menu, available styles are: "standard", "buttons"
    inputStyle = "standard" # changes the style of inputs (like the searchbar), available styles are: "standard", "buttons"

    enableSearch = true  # enable search page
    searchbarEverywhere = true  # if the searchbar should be shown in every page; requires enableSearch
    searchMenuLink = false  # add a search link to the navigation menu; requires enableSearch
    mobileHamburgerNav = false  # alternative hamburger menu layout for the main nav menu when screen is small

    enableFeatured = false  # enable a particular view for articles marked as featured (featured: true in the article frontmatter)

    underlineTitleLinks = true  # show an underline also for links that are titles

    # # enable comments support with commento using the script from your server
    # commento = "https://example.com/js/commento.js"

    # # enable comments support with cactus comments (cactus.chat)
    # cactusCommentsSiteName = "example.com"
    # cactusCommentsServerName = "cactus.chat"
    # cactusCommentsHomeserver = "https://matrix.cactus.chat:8448"

    # # enable analytics using Plausible
    # plausibleScriptUrl = "https://something.com/..."
    # plausibleDomain = "example.com"

    # # enable analytics using Umami
    # umamiScriptUrl = "https://something.com/..."
    # umamiWebsiteId = "example-tracking-code"

    enableShareOnFediverse = false  # enable a button at the end of an article to share it on the fediverse
    tocBeforeImage = false  # show the table of contents before the main article image; default false

    # WARNING: deprecated! Use [[menu.icons]] instead, look below
    # links = [
    #     ["GitLab", "https://gitlab.com/gabmus"],
    #     ["GNOME", "https://gitlab.gnome.org/gabmus"],
    #     ["YouTube", "https://youtube.com/TechPillsNet"]
    # ]

    # you can customize all of the colors in this theme
    # Colors are defined in data/colors.yml

    # alternative sidebar layout
    enableSidebarLayout = false
    tocInSidebar = true  # if the sidebar is enbabled, show the TOC in the sidebar

    # redirect to baseURL if current URL host doesn't match
    # useful if deploying in gitlab pages with custom domain and don't want
    # the username.gitlab.io/website url to persist
    # this requires you to set baseURL (see above)
    forceRedirect = true

    infiniteScrolling = false  # activates infinite scrolling instead of regular pagination
    enableFooterColumns = false  # activates footer columns, as described below
    enableJumbotron = true  # enables jumbotron, as described below
    # related articles will be selected randomly based on tags and shown at
    # the bottom of the article, after the comments
    enableRelatedArticles = true
    relatedArticlesNum = 3  # how many related articles to show
    randomRelated = false  # sorts related articles in random order (randomized at built time)

[menu]
    # these links will be added to the main navigation menu, sorted by weight
    # other elements in this menu are added automatically from the "pages" folder
    # the folder it will look into can be customized with the pages variable
    # in params above

    # [[menu.main]]
    #     identifier = "about"
    #     name = "About"
    #     url = "/about/"
    #     weight = 99
    #
    # [[menu.main]]
    #     identifier = "notes"
    #     name = "Notes"
    #     url = "/notes/"
    #     weight = 10
    #
    # [[menu.main]]
    #     identifier = "docs"
    #     name = "Docs"
    #     url = "/docs/"
    #     weight = 10

    # these links (menu.icons) will be added as icon links below the main nav
    [[menu.icons]]
        identifier = "github"
        name = "GitHub"
        url = "https://github.com/hossein-lap"
        weight = 10
    [[menu.icons]]
        identifier = "gitlab"
        name = "GitLab"
        url = "https://gitlab.com/primejade"
        weight = 10
    [[menu.icons]]
        identifier = "linkedin"
        name = "LinkedIn"
        url = "https://linkedin.com/in/hossein-smail"
        weight = 10
    [[menu.icons]]
        identifier = "email"
        name = "Gmail"
        url = "mailto://hosteam01@gmail.com"
        weight = 10
    # [[menu.icons]]
    #     identifier = "gnome"
    #     name = "GNOME GitLab"
    #     url = "https://gitlab.gnome.org/gabmus"
    #     weight = 20

[markup.asciidocExt]
[markup.asciidocExt.attributes]
source-highlighter = "rouge"
rouge-style = "base16.dark"
rouge-css = "syntax"

# # this section is necessary if you want infinite scrolling
# # it allows to output the article list as paged JSON so that "pages" can be retrieved via javascript
# [outputs]
#     home = ["HTML", "JSON"]

[security]
  enableInlineShortcodes = true
  [security.exec]
    allow = ['^dart-sass-embedded$', '^go$', '^npx$', '^postcss$', '^asciidoctor$']
    osEnv = ['(?i)^(PATH|PATHEXT|APPDATA|TMP|TEMP|TERM)$']
